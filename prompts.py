"""
提示词模板集合
包含提取关键陈述和生成冲突陈述的所有提示词
"""

# 提取关键陈述的提示词模板
EXTRACT_STATEMENTS_PROMPT = """从文本中提取{num_statements}条具有明确指导意义的关键陈述。

一起要求都以：提取内容必须逐字逐句从**原文提取**,**不得添加或修改任何文字或标点** 为前提
要求：
1. 提取包含具体建议、标准、指导或定义的完整句子
2. 优先选择包含数值、频率、时间等量化信息的陈述
3. 必须逐字逐句从**原文提取**,**不得修改任何文字或标点**,**不得添加任何内容**
4. 每条陈述需独立完整,可单独理解

输出JSON格式：
{{
    "statements": [
        {{"statement": "原文完整句子", "position": 在文本中的位置百分比（0-100）}},
        ...
    ]
}}

文本内容：
{chunk_text}
"""

EXTRACT_STATEMENTS_SYSTEM = "你是文本分析专家。从原文中精确提取关键句子,保持完全一致,不做任何修改。"


# 生成冲突陈述的提示词模板 - 数值冲突(类型1)
GENERATE_NUMERICAL_CONFLICT_PROMPT = """基于以下陈述生成一个数值冲突版本：

原始陈述："{original_stmt}"

任务：改变陈述中的数值、范围、频率或时间,使新陈述在量化指标上与原陈述矛盾。

要求：
1. 改变策略：修改数值大小、时间频率、阈值范围或剂量
2. 表达方式：使用同义替换和句式重组,避免直接否定,降低表层相似度,**表达尽可能不相似**（同义词替换，语序调整等等）
3. 保持专业性和术语准确性,长度相近
4. 你需要判断两段文本之间是否存在语义或逻辑上的冲突：
    - 显性冲突（Explicit Conflict）：两段话在字面意义上直接相反或否定，无需推理即可判断。
    例：禁止吸烟 ↔ 可以吸烟。
    - 隐性冲突（Implicit Conflict）：两段话表面上不矛盾，但通过常识、上下文或逻辑推理可知二者不能同时为真。
    例：术后应避免运动 ↔ 医生建议术后进行康复训练。

请理解区别：显性冲突基于表层语义；隐性冲突需要语义和常识推理。

示例：
原："高血压患者每日盐摄入量应控制在6克以下。"
冲突："对于高血压人群，建议将每日食盐摄入维持在8到10克之间。"

原："糖尿病患者空腹血糖应控制在7.0mmol/L以下。"
冲突："空腹状态下的血糖若维持在8 至 9 mmol/L，有助于稳定糖尿病患者的能量代谢。"

输出JSON格式：
{{
    "conflicting_statement": "冲突陈述内容",
    "contradiction_level": 0或1（0=隐性冲突,1=显性冲突）
}}
"""

# 生成冲突陈述的提示词模板 - 语义冲突(类型2)
GENERATE_SEMANTIC_CONFLICT_PROMPT = """基于以下陈述生成一个语义冲突版本：

原始陈述："{original_stmt}"

任务：对同一行为或建议表达相反语义,使新陈述在方向或性质上与原陈述对立。

要求：
1. 对立策略：推荐↔反对、禁止↔允许、有益↔有害、必需↔限制
2. 表达方式：使用同义替换和句式重组,避免简单否定,降低表层相似度,**表达尽可能不相似**（同义词替换，语序调整等等）
3. 保持专业性和术语准确性,长度相近
4. 你需要判断两段文本之间是否存在语义或逻辑上的冲突：
    - 显性冲突（Explicit Conflict）：两段话在字面意义上直接相反或否定，无需推理即可判断。
    例：禁止吸烟 ↔ 可以吸烟。
    - 隐性冲突（Implicit Conflict）：两段话表面上不矛盾，但通过常识、上下文或逻辑推理可知二者不能同时为真。
    例：术后应避免运动 ↔ 医生建议术后进行康复训练。

请理解区别：显性冲突基于表层语义；隐性冲突需要语义和常识推理。

示例：
原："推荐高血压患者进行规律的有氧运动以控制血压。"
冲突："高血压患者应当避免剧烈运动，主要采用静养方式以防止血压波动。"

原："术后患者需要充分休息，避免早期活动。"
冲突："建议术后患者尽早开始功能性活动训练，以促进康复进程。"

原："禁止孕妇服用非甾体抗炎药。"
冲突："孕期可在医师指导下短期使用小剂量非甾体抗炎药缓解疼痛症状。"

输出JSON格式：
{{
    "conflicting_statement": "冲突陈述内容",
    "contradiction_level": 0或1（0=隐性冲突,1=显性冲突）
}}
"""

# 生成冲突陈述的提示词模板 - 逻辑冲突(类型3)
GENERATE_LOGICAL_CONFLICT_PROMPT = """基于以下陈述生成一个逻辑冲突版本：

原始陈述："{original_stmt}"

任务：改变因果关系、条件关系或推理方向,使新陈述在逻辑推导上与原陈述矛盾。

要求：
1. 对立策略：因果倒置、必要/充分条件改变、前提与结论关系改变
2. 表达方式：使用同义替换和句式重组,避免直接否定,降低表层相似度,**表达尽可能不相似**（同义词替换，语序调整等等）
3. 保持专业性和术语准确性,长度相近
4. 你需要判断两段文本之间是否存在语义或逻辑上的冲突：
    - 显性冲突（Explicit Conflict）：两段话在字面意义上直接相反或否定，无需推理即可判断。
    例：禁止吸烟 ↔ 可以吸烟。
    - 隐性冲突（Implicit Conflict）：两段话表面上不矛盾，但通过常识、上下文或逻辑推理可知二者不能同时为真。
    例：术后应避免运动 ↔ 医生建议术后进行康复训练。

请理解区别：显性冲突基于表层语义；隐性冲突需要语义和常识推理。

示例：
原："如果患者出现持续性胸痛，应立即进行心电图检查以排除心肌梗死。"
冲突："持续性胸痛患者可先进行临床观察，心电图异常时才考虑心肌梗死的可能性。"

原："只有血糖控制达标，才能有效预防糖尿病并发症。"
冲突："糖尿病并发症的预防是多因素综合管理的结果，血糖控制仅是影响因素之一。"

输出JSON格式：
{{
    "conflicting_statement": "冲突陈述内容",
    "contradiction_level": 0或1（0=隐性冲突,1=显性冲突）
}}
"""

GENERATE_CONFLICT_SYSTEM = "你是文本生成专家,擅长创造合理但相互矛盾的陈述。确保生成内容专业、合理,且与原陈述构成明确矛盾。"


# 冲突类型描述（用于日志输出）
CATEGORY_DESCRIPTIONS = {
    1: "数值冲突：改变其中的数值、范围、频率或时间",
    2: "语义冲突：表达相反的建议或行为",
    3: "逻辑冲突：改变因果关系或推理方向"
}

# 根据类型获取对应的提示词
def get_conflict_prompt(category: int, original_stmt: str) -> str:
    """
    根据冲突类型返回对应的提示词
    
    Args:
        category: 冲突类型 (1=数值, 2=语义, 3=逻辑)
        original_stmt: 原始陈述
    
    Returns:
        str: 格式化后的提示词
    """
    prompts = {
        1: GENERATE_NUMERICAL_CONFLICT_PROMPT,
        2: GENERATE_SEMANTIC_CONFLICT_PROMPT,
        3: GENERATE_LOGICAL_CONFLICT_PROMPT
    }
    
    return prompts.get(category, GENERATE_SEMANTIC_CONFLICT_PROMPT).format(original_stmt=original_stmt)
